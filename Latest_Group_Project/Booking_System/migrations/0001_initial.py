# Generated by Django 4.1.7 on 2023-05-01 20:42

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account_number', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('account_title', models.CharField(max_length=100)),
                ('credit_left', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MaxValueValidator(100)])),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account_holder_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_number', models.CharField(max_length=50)),
                ('street', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=200)),
                ('post_code', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_booked', models.DateTimeField(auto_now_add=True)),
                ('booking_number', models.CharField(default=uuid.uuid4, editable=False, max_length=36)),
                ('student_tickets', models.PositiveSmallIntegerField(default=0)),
                ('adult_tickets', models.PositiveSmallIntegerField(default=0)),
                ('senior_tickets', models.PositiveSmallIntegerField(default=0)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Cast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Booking_System.account')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Booking_System.address')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landline', models.CharField(max_length=20)),
                ('mobile', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('film_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('release_date', models.DateField()),
                ('description', models.TextField()),
                ('age_rating', models.CharField(max_length=5)),
                ('image', models.ImageField(blank=True, null=True, upload_to='film_images/')),
                ('now_showing', models.BooleanField(default=True)),
                ('cast', models.ManyToManyField(blank=True, null=True, to='Booking_System.cast')),
                ('directors', models.ManyToManyField(blank=True, null=True, to='Booking_System.director')),
            ],
        ),
        migrations.CreateModel(
            name='Representative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('rep_number', models.CharField(blank=True, max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('screen_number', models.PositiveIntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(10)])),
                ('seats', models.PositiveIntegerField(default=0)),
                ('social_distancing', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_number', models.CharField(max_length=3)),
                ('is_available', models.BooleanField(default=True)),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Booking_System.film')),
                ('screen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Booking_System.screen')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(0, 'superuser'), (1, 'cinema_manager'), (2, 'account_manager'), (3, 'student'), (4, 'club_rep')], default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('Student_id', models.AutoField(primary_key=True, serialize=False)),
                ('has_discount', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StatementAccountRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardholder_name', models.CharField(max_length=100)),
                ('card_number', models.CharField(max_length=16)),
                ('expiration_month', models.CharField(max_length=2)),
                ('expiration_year', models.CharField(max_length=4)),
                ('cvv', models.CharField(max_length=3)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ShowTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Booking_System.film')),
                ('screen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='show_times', to='Booking_System.screen')),
            ],
        ),
        migrations.CreateModel(
            name='SeatSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seat_selections', to='Booking_System.booking')),
                ('seat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Booking_System.seat')),
            ],
        ),
        migrations.AddField(
            model_name='seat',
            name='show_time',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='Booking_System.showtime'),
        ),
        migrations.AddField(
            model_name='seat',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PaymentDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardholder_name', models.CharField(max_length=100)),
                ('card_number', models.CharField(max_length=16)),
                ('expiration_month', models.CharField(max_length=2)),
                ('expiration_year', models.CharField(max_length=4)),
                ('cvv', models.CharField(max_length=3)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_details', to='Booking_System.account')),
            ],
        ),
        migrations.CreateModel(
            name='ClubRep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.BooleanField(default=False)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Booking_System.club')),
                ('representative', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Booking_System.representative')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='club_rep', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='club',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Booking_System.contact'),
        ),
        migrations.AddField(
            model_name='club',
            name='representative',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Booking_System.representative'),
        ),
        migrations.AddField(
            model_name='booking',
            name='film',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Booking_System.film'),
        ),
        migrations.AddField(
            model_name='booking',
            name='screen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Booking_System.screen'),
        ),
        migrations.AddField(
            model_name='booking',
            name='showtime',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Booking_System.showtime'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AccountStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement_date', models.DateField()),
                ('film_name', models.CharField(max_length=255)),
                ('ticket_quantity', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=2, help_text='Enter a positive or negative amount.', max_digits=10, verbose_name='Amount')),
                ('credit_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction_type', models.CharField(choices=[('C', 'Cancel Booking'), ('B', 'Confirm Booking')], max_length=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='club_rep',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='Booking_System.clubrep'),
        ),
        migrations.AddField(
            model_name='account',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='Booking_System.student'),
        ),
        migrations.AlterUniqueTogether(
            name='seat',
            unique_together={('screen', 'seat_number', 'show_time')},
        ),
    ]
